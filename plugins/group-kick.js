let handler = async (m, { conn, participants, usedPrefix, command, isROwner }) => {
  try {
    let kickte = `ğŸ’šğŸŒ¿ Â¡Sensei! Menciona al usuario que deseas remover o responde a su mensaje. Como presidenta del Club de IngenierÃ­a, necesito saber quiÃ©n debe ser removido de esta operaciÃ³n.`
    
    
    if (!m.mentionedJid[0] && !m.quoted) {
      return m.reply(kickte, m.chat, { mentions: conn.parseMention(kickte) })
    }
    
    
    let user = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted.sender
    
    
    let participantsList = participants.map(p => p.id)
    if (!participantsList.includes(user)) {
      return m.reply('ğŸ’šğŸŒ¿ Â¡Sensei! Ese usuario no se encuentra en esta unidad tÃ¡ctica. Nozomi ha verificado la lista de miembros.')
    }
    
    
    if (user === conn.user.jid) {
      return m.reply('ğŸ’šğŸŒ¿ Â¡Sensei! No puedo removerme a mÃ­ misma de la operaciÃ³n. El Club de IngenierÃ­a me necesita aquÃ­ para coordinar las actividades. Â¡Eso serÃ­a contraproducente!')
    }
    
    
    let groupMetadata = await conn.groupMetadata(m.chat)
    if (user === groupMetadata.owner) {
      return m.reply('ğŸ’šğŸŒ¿ Â¡Sensei! No puedo remover al comandante supremo de esta unidad. Como estratega del Club de IngenierÃ­a, debo respetar la cadena de mando.')
    }
    
    
    let userName = conn.getName(user)
    
    
    const removalMessages = [
      "Â¡OperaciÃ³n de remociÃ³n ejecutada con precisiÃ³n estratÃ©gica!",
      "Â¡La decisiÃ³n tÃ¡ctica ha sido implementada exitosamente!",
      "Â¡El Club de IngenierÃ­a ha procesado la solicitud de transferencia!",
      "Â¡Protocolo de seguridad de Kivotos activado con Ã©xito!"
    ]
    
    
    await conn.groupParticipantsUpdate(m.chat, [user], 'remove')
    
   
    let successMsg = removalMessages[Math.floor(Math.random() * removalMessages.length)]
    m.reply(`ğŸ’šğŸŒ¿ ${successMsg}\n\n*${userName}* ha sido removido de la unidad tÃ¡ctica segÃºn las Ã³rdenes del Sensei.\n\n"La planificaciÃ³n estratÃ©gica siempre debe considerar estos ajustes necesarios." - Nozomi âœ¨`)
    
    
    try {
      await conn.sendMessage(user, { 
        text: `ğŸ’šğŸŒ¿ Estimado estudiante, has sido transferido fuera de la unidad tÃ¡ctica *${groupMetadata.subject}* por decisiÃ³n administrativa.\n\n"No lo tomes personal, son ajustes estratÃ©gicos necesarios para el funcionamiento Ã³ptimo del grupo." - Nozomi, Club de IngenierÃ­a ğŸŒ±` 
      })
    } catch (error) {
      console.log('No se pudo enviar mensaje privado al usuario expulsado:', error)
    }
    
  } catch (error) {
    console.error('Error en comando kick:', error)
    m.reply('ğŸ’šğŸŒ¿ Â¡Oh no, Sensei! OcurriÃ³ un error durante la operaciÃ³n de remociÃ³n. Como estratega del Club de IngenierÃ­a, recomiendo verificar que tengas los permisos administrativos necesarios para esta acciÃ³n.')
  }
}

handler.help = ['kick *@user*', 'expulsar *@user*']
handler.tags = ['group']
handler.command = ['kick', 'expulsar', 'echar', 'remover'] 
handler.admin = true
handler.group = true
handler.Admin = true

export default handler
